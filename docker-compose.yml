version: '3.8'

services:
  # Service pour l'application Flask
  web:
    build: .
    container_name: jo_etickets_app
    restart: always
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/jo_etickets
      - SECRET_KEY=your_secret_key_change_me_in_production
      - SALT_KEY=your_salt_key_change_me_in_production
    volumes:
      - ./app/static/uploads:/app/app/static/uploads
    depends_on:
      - db
      - redis
    networks:
      - app_network

  # Service pour la base de données PostgreSQL
  db:
    image: postgres:14
    container_name: jo_etickets_db
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=jo_etickets
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - app_network

  # Service pour Redis (utilisé pour les sessions et le cache)
  redis:
    image: redis:7
    container_name: jo_etickets_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network

  # Service pour le serveur mail (pour les tests)
  mailhog:
    image: mailhog/mailhog
    container_name: jo_etickets_mail
    ports:
      - "1025:1025" # SMTP port
      - "8025:8025" # Web UI port
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: